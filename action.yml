name: Codex Replier
description: "Reply to issue/PR comments starting with a trigger by calling OpenAI and posting a mention reply"

inputs:
  trigger_prefix:
    description: "Prefix to trigger Codex (e.g. /codex)"
    required: true
  model:
    description: "Model to use (e.g. o4-mini, gpt-4o-mini)"
    required: true
  mention_author:
    description: "Whether to @mention the original commenter (true/false)"
    required: true
  system_prompt:
    description: "Optional system instructions to prepend"
    required: false
    default: ''
  include_metadata:
    description: "Include repo/issue context in the prompt"
    required: false
    default: 'true'
  include_thread_context:
    description: "Include recent thread comments in the prompt"
    required: false
    default: 'true'
  max_context_chars:
    description: "Max characters to allocate to metadata + thread context"
    required: false
    default: '8000'
  max_thread_comments:
    description: "Max recent thread comments to include"
    required: false
    default: '5'

runs:
  using: composite
  steps:
    - name: Set up Node (for CLI fallback)
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Run Codex replier
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
        INPUT_TRIGGER_PREFIX: ${{ inputs.trigger_prefix }}
        INPUT_MODEL: ${{ inputs.model }}
        INPUT_MENTION_AUTHOR: ${{ inputs.mention_author }}
        INPUT_SYSTEM_PROMPT: ${{ inputs.system_prompt }}
        INPUT_INCLUDE_METADATA: ${{ inputs.include_metadata }}
        INPUT_INCLUDE_THREAD_CONTEXT: ${{ inputs.include_thread_context }}
        INPUT_MAX_CONTEXT_CHARS: ${{ inputs.max_context_chars }}
        INPUT_MAX_THREAD_COMMENTS: ${{ inputs.max_thread_comments }}
      run: |
        set -euo pipefail
        python "$GITHUB_ACTION_PATH/.github/actions/codex-replier/replier.py"
